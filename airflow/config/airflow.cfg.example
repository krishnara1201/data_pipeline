[core]
# The folder where your airflow pipelines live, most likely a
# subfolder in a code repository. This path must be absolute.
dags_folder = /opt/airflow/dags

# Default timezone in case supplied date times are naive
default_timezone = utc

# The executor class that airflow should use
executor = LocalExecutor

# The auth manager class that airflow should use
auth_manager = airflow.api_fastapi.auth.managers.simple.simple_auth_manager.SimpleAuthManager

# The list of users and their associated role in simple auth manager
simple_auth_manager_users = admin:admin

# Whether to disable authentication and allow everyone as admin
simple_auth_manager_all_admins = False

# This defines the maximum number of task instances that can run concurrently
parallelism = 32

# The maximum number of task instances allowed to run concurrently in each DAG
max_active_tasks_per_dag = 16

# Are DAGs paused by default at creation
dags_are_paused_at_creation = True

# The maximum number of active DAG runs per DAG
max_active_runs_per_dag = 16

# Whether to load the DAG examples that ship with Airflow
load_examples = False

# Path to the folder containing Airflow plugins
plugins_folder = /opt/airflow/plugins

# Secret key to save connection passwords in the db
# Generate a new key using: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
fernet_key = YOUR_FERNET_KEY_HERE

# Whether to disable pickling dags
donot_pickle = True

# How long before timing out a python file import
dagbag_import_timeout = 30.0

# Secret key used to authenticate internal API clients to core
# Generate a new key using: python -c "import secrets; print(secrets.token_urlsafe(16))"
internal_api_secret_key = YOUR_INTERNAL_API_SECRET_KEY_HERE

[database]
# The SqlAlchemy connection string to the metadata database
sql_alchemy_conn = postgresql+psycopg2://airflow:airflow@postgres:5432/airflow

[webserver]
# The base url of your website as airflow cannot guess what domain or
# cname you are using. This is used in automated emails that
# airflow sends to point links to the right web server
base_url = http://localhost:8080

# The secret key used to run your flask app
# Generate a new key using: python -c "import secrets; print(secrets.token_urlsafe(16))"
secret_key = YOUR_SECRET_KEY_HERE

[api]
# Secret key used to encode and decode JWTs to authenticate to public and private APIs
# Generate a new key using: python -c "import secrets; print(secrets.token_urlsafe(16))"
jwt_secret = YOUR_JWT_SECRET_HERE 